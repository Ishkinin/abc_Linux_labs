![](/PrtSc/0.png)
## Работа №4. Системные вызовы, процессы, компиляция программ. ##  
## Цель работы: ##  
* Приобретение навыков по управлению процессами.   
* Изучение системного вызова fork().   
* Приобретение навыков написания и трансляции системного ПО на языке C.   
* Изучение утилиты make и её использование для трансляции программ на языке C.   
* Использование удалённых серверов для трансляции приложений.   
### Запускаем docker контейнер в интерактивном режиме: ###  
```sudo docker run --rm -it ubuntu:14.04  ```  
![Альтернативный текст](/PrtSc/1.png)
### Устанавливаем редактор nano, компилятор gcc, openssh-client и утилиту make: ####  
```apt-get update ```  
```apt-get install nano ```  
```apt-get install gcc ```  
```apt-get install -y openssh-client```    

![Альтернативный текст](/PrtSc/2.png)
![Альтернативный текст](/PrtSc/3.png)
![Альтернативный текст](/PrtSc/4.png)
![Альтернативный текст](/PrtSc/7.png)
### Cоздаем каталог work и переходим в него: ###  
```mkdir work```  
```cd work```   
### Копируем файлы с удаленного сервера: ###
```scp -r -P 6666 student@openit.guap.ru:/container/ABC-Linux/lab4/* work/ ```    
![Альтернативный текст](/PrtSc/5.png)
![Альтернативный текст](/PrtSc/6.png)
### Установка программы в каталог bin. Команда: ### 
```make install```  
```./bin/lab4 ```  
![Альтернативный текст](/PrtSc/8.png)  
![Альтернативный текст](/PrtSc/9.png)  
## Выводы: ##  
* Приобрел навыки управления процессами. 
* Приобрел навыки написания и перевода системного программного обеспечения на языке C. 
* Изучил утилиту make и ее использование для перевода программ.


 
  





